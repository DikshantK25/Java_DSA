import java.util.Arrays; // Import the Arrays class to use Arrays.toString//it is for m*n matrix    public class RowColMat{            public static void main(String[] args) {                int[][] arr = { // Declare and initialize a 2D integer array named "arr"                        {10, 20, 30, 40},                        {15, 25, 35, 45},                        {28, 29, 37, 49},                        {33, 34, 38, 50}                };                System.out.println(Arrays.toString(search(arr, 49))); // Print the result of the search function            }            static int[] search(int[][] matrix, int target) { // Define a static method "search" that takes a 2D array and a target integer                int m = matrix.length;    // Number of rows in the matrix                int n = matrix[0].length; // Number of columns in the matrix                int r = 0;                // Initialize a variable "r" to 0, representing the current row                int c = n - 1;            // Initialize a variable "c" to (number of columns - 1), representing the current column                while (r < m && c >= 0) { // Start a while loop that continues as long as the row index is within bounds and the column index is non-negative                    if (matrix[r][c] == target) { // Check if the current element in the matrix is equal to the target                        return new int[]{r, c}; // If found, return the indices as an array                    }                    if (matrix[r][c] < target) { // If the current element is less than the target                        r++; // Move to the next row                    } else {                        c--; // Otherwise, move to the previous column                    }                }                return new int[]{-1, -1}; // If the target is not found, return an array with both indices set to -1            }        }